{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LoggedInUserService {\n  constructor() {\n    this.loggedInUserInfo = new BehaviorSubject({\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      birthdate: new Date(),\n      street: '',\n      buildingnumber: '',\n      gender: '',\n      isAdmin: false\n    });\n    this.isLoggedIn = new BehaviorSubject(false);\n    this.isAdmin = new BehaviorSubject(false);\n  }\n  setLoggedInUserInfo(data) {\n    this.loggedInUserInfo.next(data);\n  }\n  getLoggedInUserInfo() {\n    return this.loggedInUserInfo.asObservable();\n  }\n  setLoggedInStatus(value) {\n    this.isLoggedIn.next(value);\n  }\n  getLoggedInStatus() {\n    return this.isLoggedIn.asObservable();\n  }\n  setLoggedInUserIsAdmin(value) {\n    this.isAdmin.next(value);\n  }\n  getLoggedIsUserIsAdmin() {\n    return this.isAdmin.asObservable();\n  }\n}\nLoggedInUserService.ɵfac = function LoggedInUserService_Factory(t) {\n  return new (t || LoggedInUserService)();\n};\nLoggedInUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoggedInUserService,\n  factory: LoggedInUserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;AAMlD,OAAM,MAAOC,mBAAmB;EAE9BC;IAEQ,qBAAgB,GAAsC,IAAIF,eAAe,CAAqB;MAACG,SAAS,EAAE,EAAE;MACpHC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrBC,MAAM,EAAE,EAAE;MACVC,cAAc,EAAE,EAAE;MAClBC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;KACV,CAAC;IAEQ,eAAU,GAA6B,IAAIZ,eAAe,CAAU,KAAK,CAAC;IAE1E,YAAO,GAA6B,IAAIA,eAAe,CAAU,KAAK,CAAC;EAf/D;EAiBhBa,mBAAmB,CAACC,IAAsB;IACxC,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAACF,IAAI,CAAC;EAClC;EAEAG,mBAAmB;IACjB,OAAO,IAAI,CAACF,gBAAgB,CAACG,YAAY,EAAE;EAC7C;EAEAC,iBAAiB,CAACC,KAAc;IAC9B,IAAI,CAACC,UAAU,CAACL,IAAI,CAACI,KAAK,CAAC;EAC7B;EAEAE,iBAAiB;IACf,OAAO,IAAI,CAACD,UAAU,CAACH,YAAY,EAAE;EACvC;EAEAK,sBAAsB,CAACH,KAAc;IACnC,IAAI,CAACR,OAAO,CAACI,IAAI,CAACI,KAAK,CAAC;EAC1B;EAEAI,sBAAsB;IACpB,OAAO,IAAI,CAACZ,OAAO,CAACM,YAAY,EAAE;EACpC;;AAzCWjB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAwB,SAAnBxB,mBAAmB;EAAAyB,YAFlB;AAAM","names":["BehaviorSubject","LoggedInUserService","constructor","firstname","lastname","email","password","birthdate","Date","street","buildingnumber","gender","isAdmin","setLoggedInUserInfo","data","loggedInUserInfo","next","getLoggedInUserInfo","asObservable","setLoggedInStatus","value","isLoggedIn","getLoggedInStatus","setLoggedInUserIsAdmin","getLoggedIsUserIsAdmin","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\services\\logged-in-user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { loggedInUserInfo } from '../app/Interface/userdetails';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggedInUserService {\r\n\r\n  constructor() { }\r\n\r\n  private loggedInUserInfo: BehaviorSubject<loggedInUserInfo> = new BehaviorSubject<loggedInUserInfo>(  {firstname: '',\r\n  lastname: '',\r\n  email: '',\r\n  password: '',\r\n  birthdate: new Date(),\r\n  street: '',\r\n  buildingnumber: '',\r\n  gender: '',\r\n  isAdmin: false ,\r\n});\r\n\r\n  private isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  private isAdmin: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  setLoggedInUserInfo(data: loggedInUserInfo): void {\r\n    this.loggedInUserInfo.next(data);\r\n  }\r\n\r\n  getLoggedInUserInfo(): Observable<loggedInUserInfo> {\r\n    return this.loggedInUserInfo.asObservable();\r\n  }\r\n\r\n  setLoggedInStatus(value: boolean): void {\r\n    this.isLoggedIn.next(value);\r\n  }\r\n\r\n  getLoggedInStatus(): Observable<boolean> {\r\n    return this.isLoggedIn.asObservable();\r\n  }\r\n\r\n  setLoggedInUserIsAdmin(value: boolean):void{\r\n    this.isAdmin.next(value);\r\n  }\r\n\r\n  getLoggedIsUserIsAdmin():Observable<boolean>{\r\n    return this.isAdmin.asObservable();\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}