{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet GuardGuard = class GuardGuard {\n  constructor(loggedInUserServiceInstance, router) {\n    this.loggedInUserServiceInstance = loggedInUserServiceInstance;\n    this.router = router;\n  }\n  canActivate() {\n    var isLoggedIn = false;\n    this.loggedInUserServiceInstance.getLoggedInStatus().subscribe(value => {\n      isLoggedIn = value;\n    });\n    if (isLoggedIn) {\n      this.router.navigate(['/home']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n};\nGuardGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], GuardGuard);\nexport { GuardGuard };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,IAAMC,UAAU,GAAhB,MAAMA,UAAU;EACrBC,YAAoBC,2BAAgD,EAAUC,MAAc;IAAxE,gCAA2B,GAA3BD,2BAA2B;IAA+B,WAAM,GAANC,MAAM;EAAY;EAEhGC,WAAW;IACT,IAAIC,UAAU,GAAG,KAAK;IACtB,IAAI,CAACH,2BAA2B,CAACI,iBAAiB,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MACrEH,UAAU,GAAGG,KAAK;IACpB,CAAC,CAAC;IACF,IAAIH,UAAU,EAAE;MACd,IAAI,CAACF,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;KACb,MAAM;MACL,OAAO,IAAI;;EAEf;CACD;AAfYT,UAAU,eAHtBD,UAAU,CAAC;EACVW,UAAU,EAAE;CACb,CAAC,GACWV,UAAU,CAetB;SAfYA,UAAU","names":["Injectable","GuardGuard","constructor","loggedInUserServiceInstance","router","canActivate","isLoggedIn","getLoggedInStatus","subscribe","value","navigate","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\app\\guards\\guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { LoggedInUserService } from './logged-in-user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardGuard implements CanActivate {\n  constructor(private loggedInUserServiceInstance: LoggedInUserService, private router: Router) { }\n\n  canActivate(): boolean {\n    var isLoggedIn = false ;\n    this.loggedInUserServiceInstance.getLoggedInStatus().subscribe(value =>{\n      isLoggedIn = value;\n    });\n    if (isLoggedIn) {\n      this.router.navigate(['/home']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}