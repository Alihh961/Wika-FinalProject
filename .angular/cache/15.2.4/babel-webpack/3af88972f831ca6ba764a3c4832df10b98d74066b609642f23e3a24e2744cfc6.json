{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ETHService {\n  constructor(http) {\n    this.http = http;\n  }\n  getETHPrice() {\n    const url = \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=EUR\";\n    return this.http.get(url);\n  }\n  setETHPrice(value) {\n    this.ETHPrice = value;\n  }\n}\nETHService.ɵfac = function ETHService_Factory(t) {\n  return new (t || ETHService)(i0.ɵɵinject(i1.HttpClient));\n};\nETHService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ETHService,\n  factory: ETHService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAErBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAIxCC,WAAW;IAET,MAAMC,GAAG,GAAG,iEAAiE;IAC7E,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAMD,GAAG,CAAC;EAEhC;EAEAE,WAAW,CAACC,KAAa;IACvB,IAAI,CAACC,QAAQ,GAAGD,KAAK;EACvB;;AAfWP,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAS,SAAVT,UAAU;EAAAU,YAFT;AAAM","names":["ETHService","constructor","http","getETHPrice","url","get","setETHPrice","value","ETHPrice","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika-FinalProject\\src\\services\\eth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ETHService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ETHPrice !: number;\r\n\r\n  getETHPrice():Observable<any>{\r\n\r\n    const url = \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=EUR\";\r\n    return this.http.get<any>(url);\r\n\r\n  };\r\n\r\n  setETHPrice(value :number):void{\r\n    this.ETHPrice = value;\r\n  }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}