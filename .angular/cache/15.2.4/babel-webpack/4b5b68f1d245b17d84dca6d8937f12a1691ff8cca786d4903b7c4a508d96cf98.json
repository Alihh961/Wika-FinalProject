{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./logged-in-user.service\";\nimport * as i2 from \"@angular/router\";\nexport class GuardGuard {\n  constructor(loggedInUserServiceInstance, router) {\n    this.loggedInUserServiceInstance = loggedInUserServiceInstance;\n    this.router = router;\n    this.isLoggedIn = false;\n  }\n  ngOnInit() {\n    this.loggedInUserServiceInstance.getLoggedInStatus().subscribe(value => {\n      this.isLoggedIn = value;\n    });\n  }\n  canActivate(route, state) {\n    if (this.isLoggedIn === true) {\n      this.router.navigate([\"home\"]);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\nGuardGuard.ɵfac = function GuardGuard_Factory(t) {\n  return new (t || GuardGuard)(i0.ɵɵinject(i1.LoggedInUserService), i0.ɵɵinject(i2.Router));\n};\nGuardGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GuardGuard,\n  factory: GuardGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,2BAAgD,EAAUC,MAAc;IAAxE,gCAA2B,GAA3BD,2BAA2B;IAA+B,WAAM,GAANC,MAAM;IAEpF,eAAU,GAAY,KAAK;EAFqE;EAGhGC,QAAQ;IACN,IAAI,CAACF,2BAA2B,CAACG,iBAAiB,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MACrE,IAAI,CAACC,UAAU,GAAGD,KAAK;IACzB,CAAC,CAAC;EACJ;EACAE,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAI,IAAI,CAACH,UAAU,KAAK,IAAI,EAAE;MAC5B,IAAI,CAACL,MAAM,CAACS,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;MAC9B,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;;AAlBWZ,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAa,SAAVb,UAAU;EAAAc,YAFT;AAAM","names":["GuardGuard","constructor","loggedInUserServiceInstance","router","ngOnInit","getLoggedInStatus","subscribe","value","isLoggedIn","canActivate","route","state","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\app\\services\\guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router, Route } from '@angular/router';\nimport { LoggedInUserService } from './logged-in-user.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardGuard implements CanActivate {\n  constructor(private loggedInUserServiceInstance: LoggedInUserService, private router: Router) { }\n\n  isLoggedIn: boolean = false;\n  ngOnInit() {\n    this.loggedInUserServiceInstance.getLoggedInStatus().subscribe(value => {\n      this.isLoggedIn = value;\n    })\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.isLoggedIn === true) {\n      this.router.navigate([\"home\"]);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}