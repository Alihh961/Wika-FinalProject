{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InputvalidationsService {\n  constructor() {}\n  ageIsValid(control) {\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    const currentMonth = currentDate.getMonth() + 1; // Adding 1 since getMonth() returns zero-based index\n    const currentDay = currentDate.getDate();\n    const birthdate = new Date(control.value);\n    const birthYear = birthdate.getFullYear();\n    const birthMonth = birthdate.getMonth() + 1;\n    const birthDay = birthdate.getDate();\n    const ageYears = currentYear - birthYear;\n    const ageMonths = currentMonth - birthMonth;\n    const ageDays = currentDay - birthDay;\n    if (ageYears > 18) {\n      return null; // Valid age\n    }\n\n    return {\n      ageUnder18: true\n    }; // Age is less than 18\n  }\n}\n\nInputvalidationsService.ɵfac = function InputvalidationsService_Factory(t) {\n  return new (t || InputvalidationsService)();\n};\nInputvalidationsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InputvalidationsService,\n  factory: InputvalidationsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,uBAAuB;EAElCC,eAAgB;EAEhBC,UAAU,CAACC,OAAoB;IAC7B,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B,MAAMC,WAAW,GAAGF,WAAW,CAACG,WAAW,EAAE;IAC7C,MAAMC,YAAY,GAAGJ,WAAW,CAACK,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IACjD,MAAMC,UAAU,GAAGN,WAAW,CAACO,OAAO,EAAE;IAExC,MAAMC,SAAS,GAAG,IAAIP,IAAI,CAACF,OAAO,CAACU,KAAK,CAAC;IACzC,MAAMC,SAAS,GAAGF,SAAS,CAACL,WAAW,EAAE;IACzC,MAAMQ,UAAU,GAAGH,SAAS,CAACH,QAAQ,EAAE,GAAG,CAAC;IAC3C,MAAMO,QAAQ,GAAGJ,SAAS,CAACD,OAAO,EAAE;IAEpC,MAAMM,QAAQ,GAAGX,WAAW,GAAGQ,SAAS;IACxC,MAAMI,SAAS,GAAGV,YAAY,GAAGO,UAAU;IAC3C,MAAMI,OAAO,GAAGT,UAAU,GAAGM,QAAQ;IAErC,IAAIC,QAAQ,GAAG,EAAE,EAAE;MACjB,OAAO,IAAI,CAAC,CAAC;;;IAGf,OAAO;MAAEG,UAAU,EAAE;IAAI,CAAE,CAAC,CAAC;EAC/B;;;AAxBWpB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;SAAvBA,uBAAuB;EAAAqB,SAAvBrB,uBAAuB;EAAAsB,YAFtB;AAAM","names":["InputvalidationsService","constructor","ageIsValid","control","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","birthdate","value","birthYear","birthMonth","birthDay","ageYears","ageMonths","ageDays","ageUnder18","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\app\\services\\inputvalidations.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FormControl, ValidationErrors } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InputvalidationsService {\r\n\r\n  constructor() { }\r\n\r\n  ageIsValid(control: FormControl): ValidationErrors | null {\r\n    const currentDate = new Date();\r\n    const currentYear = currentDate.getFullYear();\r\n    const currentMonth = currentDate.getMonth() + 1; // Adding 1 since getMonth() returns zero-based index\r\n    const currentDay = currentDate.getDate();\r\n  \r\n    const birthdate = new Date(control.value);\r\n    const birthYear = birthdate.getFullYear();\r\n    const birthMonth = birthdate.getMonth() + 1;\r\n    const birthDay = birthdate.getDate();\r\n  \r\n    const ageYears = currentYear - birthYear;\r\n    const ageMonths = currentMonth - birthMonth;\r\n    const ageDays = currentDay - birthDay;\r\n  \r\n    if (ageYears > 18) {\r\n      return null; // Valid age\r\n    }\r\n  \r\n    return { ageUnder18: true }; // Age is less than 18\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}