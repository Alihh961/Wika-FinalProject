{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LoggedInUserService {\n  constructor() {\n    this.loggedInUserInfo = new BehaviorSubject({\n      firstname: '',\n      lastname: '',\n      email: '',\n      dateOfBirth: new Date(),\n      gender: ''\n    });\n    this.isLoggedIn = new BehaviorSubject(false);\n  }\n  setLoggedInUserInfo(data) {\n    this.loggedInUserInfo.next(data);\n    console.log(\"test\");\n    console.log(this.loggedInUserInfo.value);\n  }\n  getLoggedInUserInfo() {\n    return this.loggedInUserInfo.asObservable();\n  }\n  setLoggedInStatus(value) {\n    this.isLoggedIn.next(value);\n  }\n  getLoggedInStatus() {\n    return this.isLoggedIn.asObservable();\n  }\n}\nLoggedInUserService.ɵfac = function LoggedInUserService_Factory(t) {\n  return new (t || LoggedInUserService)();\n};\nLoggedInUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoggedInUserService,\n  factory: LoggedInUserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;AAMlD,OAAM,MAAOC,mBAAmB;EAE9BC;IAEQ,qBAAgB,GAAsC,IAAIF,eAAe,CAAqB;MAEtGG,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,MAAM,EAAE;KAET,CAAC;IAEQ,eAAU,GAA6B,IAAIR,eAAe,CAAU,KAAK,CAAC;EAZlE;EAehBS,mBAAmB,CAACC,IAAsB;IACxC,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAACF,IAAI,CAAC;IAChCG,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,gBAAgB,CAACI,KAAK,CAAC;EAC1C;EAEAC,mBAAmB;IACjB,OAAO,IAAI,CAACL,gBAAgB,CAACM,YAAY,EAAE;EAC7C;EAEAC,iBAAiB,CAACH,KAAc;IAC9B,IAAI,CAACI,UAAU,CAACP,IAAI,CAACG,KAAK,CAAC;EAC7B;EAEAK,iBAAiB;IACf,OAAO,IAAI,CAACD,UAAU,CAACF,YAAY,EAAE;EACvC;;AAjCWhB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAoB,SAAnBpB,mBAAmB;EAAAqB,YAFlB;AAAM","names":["BehaviorSubject","LoggedInUserService","constructor","firstname","lastname","email","dateOfBirth","Date","gender","setLoggedInUserInfo","data","loggedInUserInfo","next","console","log","value","getLoggedInUserInfo","asObservable","setLoggedInStatus","isLoggedIn","getLoggedInStatus","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\services\\logged-in-user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { loggedInUserInfo } from '../app/Interface/userdetails';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggedInUserService {\r\n\r\n  constructor() { }\r\n\r\n  private loggedInUserInfo: BehaviorSubject<loggedInUserInfo> = new BehaviorSubject<loggedInUserInfo>(  {\r\n\r\n  firstname: '',\r\n  lastname: '',\r\n  email: '',\r\n  dateOfBirth: new Date(),\r\n  gender: '',\r\n\r\n});\r\n\r\n  private isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n\r\n  setLoggedInUserInfo(data: loggedInUserInfo): void {\r\n    this.loggedInUserInfo.next(data);\r\n    console.log(\"test\");\r\n    console.log(this.loggedInUserInfo.value)\r\n  }\r\n\r\n  getLoggedInUserInfo(): Observable<loggedInUserInfo> {\r\n    return this.loggedInUserInfo.asObservable();\r\n  }\r\n\r\n  setLoggedInStatus(value: boolean): void {\r\n    this.isLoggedIn.next(value);\r\n  }\r\n\r\n  getLoggedInStatus(): Observable<boolean> {\r\n    return this.isLoggedIn.asObservable();\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}