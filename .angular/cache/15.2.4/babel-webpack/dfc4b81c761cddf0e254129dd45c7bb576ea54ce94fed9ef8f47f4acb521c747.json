{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PasswordvalidatorService {\n  constructor() {\n    this.passwordDoesntMatch = control => {\n      let password = control.get(\"password\");\n      let passwordConf = control.get(\"confPassword\");\n    };\n  }\n}\nPasswordvalidatorService.ɵfac = function PasswordvalidatorService_Factory(t) {\n  return new (t || PasswordvalidatorService)();\n};\nPasswordvalidatorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PasswordvalidatorService,\n  factory: PasswordvalidatorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,wBAAwB;EAEnCC;IAEa,wBAAmB,GAAiBC,OAAuB,IAA0B;MAChG,IAAIC,QAAQ,GAAGD,OAAO,CAACE,GAAG,CAAC,UAAU,CAAC;MACtC,IAAIC,YAAY,GAAGH,OAAO,CAACE,GAAG,CAAC,cAAc,CAAC;IAGhD,CAAC;EAPe;;AAFLJ,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;SAAxBA,wBAAwB;EAAAM,SAAxBN,wBAAwB;EAAAO,YAFvB;AAAM","names":["PasswordvalidatorService","constructor","control","password","get","passwordConf","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\validators\\passwordvalidator.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordvalidatorService {\n\n  constructor() { }\n\n  export const passwordDoesntMatch: ValidatorFn = (control:AbstractControl): ValidationErrors | null{\n    let password = control.get(\"password\");\n    let passwordConf = control.get(\"confPassword\");\n\n \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}