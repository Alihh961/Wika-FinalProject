{"ast":null,"code":"import { baseURL } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticationService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(credentials) {\n    return this.http.post(`${baseURL}login.php`, credentials);\n  }\n  getDataOfUser(token) {\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    return this.http.get(`${baseURL}loggedInUserData.php`, {\n      headers\n    });\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,OAAO,QAAQ,6BAA6B;;;AAWrD,OAAM,MAAOC,qBAAqB;EAEhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAkB;EAE1CC,KAAK,CAACC,WAA0B;IAC9B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,GAAGN,OAAO,WAAW,EAACK,WAAW,CAAC;EACjE;EAEEE,aAAa,CAACC,KAAY;IACxB,MAAMC,OAAO,GAAG;MACdC,aAAa,EAAE,UAAUF,KAAK;KAC/B;IACD,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAM,GAAGX,OAAO,sBAAsB,EAAE;MAAES;IAAO,CAAE,CAAC;EAC1E;;AAbWR,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAW,SAArBX,qBAAqB;EAAAY,YAFpB;AAAM","names":["baseURL","AuthenticationService","constructor","http","login","credentials","post","getDataOfUser","token","headers","Authorization","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\app\\services\\authentication.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { baseURL } from 'src/environment/environment';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { loginDataType } from '../Interface/userdetails';//creating an interface to handle logemail and logpassword\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(private http :HttpClient ) {  }\r\n\r\n  login(credentials :loginDataType ):Observable<any>{\r\n    return this.http.post<any>(`${baseURL}login.php`,credentials);\r\n}\r\n\r\n  getDataOfUser(token:string):Observable<any>{\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`\r\n    };\r\n    return this.http.get<any>(`${baseURL}loggedInUserData.php`, { headers });\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}