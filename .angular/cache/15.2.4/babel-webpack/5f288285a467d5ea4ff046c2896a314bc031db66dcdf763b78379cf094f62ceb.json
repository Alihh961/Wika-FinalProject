{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PasswordvalidatorService {\n  constructor() {}\n  passwordDoesntMatch(password, confPassword) {\n    if (password === confPassword) return null;else return {\n      doesntMatch: true\n    };\n  }\n}\nPasswordvalidatorService.ɵfac = function PasswordvalidatorService_Factory(t) {\n  return new (t || PasswordvalidatorService)();\n};\nPasswordvalidatorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PasswordvalidatorService,\n  factory: PasswordvalidatorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,wBAAwB;EAEnCC,eAAgB;EAEhBC,mBAAmB,CAACC,QAAyB,EAAGC,YAA6B;IAC3E,IAAGD,QAAQ,KAAKC,YAAY,EAC5B,OAAO,IAAI,MAEX,OAAO;MAAEC,WAAW,EAAG;IAAI,CAAC;EAC9B;;AATWL,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;SAAxBA,wBAAwB;EAAAM,SAAxBN,wBAAwB;EAAAO,YAFvB;AAAM","names":["PasswordvalidatorService","constructor","passwordDoesntMatch","password","confPassword","doesntMatch","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\validators\\passwordvalidator.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordvalidatorService {\n\n  constructor() { }\n\n  passwordDoesntMatch(password :AbstractControl , confPassword :AbstractControl): ValidationErrors | null{\n    if(password === confPassword )\n    return null\n    else\n    return { doesntMatch : true};\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}