{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nexport class CookieServiceService {\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n  }\n  setValue(name, value) {\n    this.cookieService.set(name, value);\n  }\n  getValue(name) {\n    return this.cookieService.get(name);\n  }\n  getAllValues() {\n    return this.cookieService.getAll();\n  }\n  deleteValue(value) {\n    this.cookieService.delete(value);\n  }\n}\nCookieServiceService.ɵfac = function CookieServiceService_Factory(t) {\n  return new (t || CookieServiceService)(i0.ɵɵinject(i1.CookieService));\n};\nCookieServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CookieServiceService,\n  factory: CookieServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,oBAAoB;EAE/BC,YAAoBC,aAA6B;IAA7B,kBAAa,GAAbA,aAAa;EAAoB;EAErDC,QAAQ,CAACC,IAAY,EAACC,KAAa;IACjC,IAAI,CAACH,aAAa,CAACI,GAAG,CAACF,IAAI,EAAGC,KAAK,CAAC;EACtC;EAEAE,QAAQ,CAACH,IAAW;IAClB,OAAO,IAAI,CAACF,aAAa,CAACM,GAAG,CAACJ,IAAI,CAAC;EACrC;EAEAK,YAAY;IACV,OAAO,IAAI,CAACP,aAAa,CAACQ,MAAM,EAAE;EACpC;EACAC,WAAW,CAACN,KAAa;IACvB,IAAI,CAACH,aAAa,CAACU,MAAM,CAACP,KAAK,CAAC;EAClC;;AAjBWL,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;SAApBA,oBAAoB;EAAAa,SAApBb,oBAAoB;EAAAc,YAFnB;AAAM","names":["CookieServiceService","constructor","cookieService","setValue","name","value","set","getValue","get","getAllValues","getAll","deleteValue","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\app\\services\\cookie-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CookieServiceService {\r\n\r\n  constructor(private cookieService : CookieService) { }\r\n\r\n  setValue(name: string,value :string):void{\r\n    this.cookieService.set(name , value);\r\n  }\r\n\r\n  getValue(name:string):string{\r\n    return this.cookieService.get(name);\r\n  }\r\n\r\n  getAllValues():{ [key: string]: string }{\r\n    return this.cookieService.getAll();\r\n  }\r\n  deleteValue(value: string){\r\n    this.cookieService.delete(value);\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}