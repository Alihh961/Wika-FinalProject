{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { baseURL } from 'src/environment/environment';\nlet GalleryComponent = class GalleryComponent {\n  constructor(http, loggedInUserServiceInstance, ETHServiceInstance) {\n    this.http = http;\n    this.loggedInUserServiceInstance = loggedInUserServiceInstance;\n    this.ETHServiceInstance = ETHServiceInstance;\n    //* Calling tokens to display in Gallery view template \n    this.nfts = [];\n    this.searchInputValue = '';\n    this.isAdmin = false;\n    this.limit = 4;\n    this.test = 0;\n    // checked radio button is all by default\n    this.selectedRadioButton = \"all\";\n  }\n  increment() {\n    this.test += 1;\n  }\n  ngOnInit() {\n    this.getCategoriesTotal();\n    this.fetchingNFTs();\n    this.loggedInUserServiceInstance.getLoggedInUserInfo().subscribe(info => {\n      this.isAdmin = info.isAdmin;\n    });\n    this.setETHPrice();\n  }\n  // maxNumberOfNfts(): void {\n  //   this.http.get<any>('http://localhost/backend/gallerynfts.php?c=all&o=0').subscribe(\n  //     data => {\n  //       this.limitMax = data[0][0][\"total\"];\n  //       console.log(this.limitMax + \" limit max\");\n  //     })\n  // }\n  getCategoriesTotal() {\n    this.http.get(`${baseURL}calculateCategories.php`).subscribe(data => {\n      this.all_categories = data[\"all\"];\n      this.sport_categories = data[\"sport\"];\n      this.music_categories = data[\"music\"];\n      this.gaming_categories = data[\"gaming\"];\n      this.art_categories = data[\"art\"];\n    }, error => {\n      console.log(error);\n    });\n  }\n  fetchingNFTs() {\n    this.http.get('http://localhost/backend/gallerynfts.php?c=' + this.selectedRadioButton + '&o=4').subscribe(data => {\n      this.nfts = data;\n      console.log(data.length);\n    }, error => {\n      console.error(error);\n    });\n  }\n  fetchMore() {\n    this.http.get('http://localhost/backend/gallerynfts.php?c=' + this.selectedRadioButton + '&o=' + (4 + this.limit)).subscribe(data => {\n      this.nfts = data;\n      this.limit += 4;\n    }, error => {\n      console.error(error);\n    });\n  }\n  getAllTokensQty() {\n    return this.nfts.length;\n  }\n  getNftArtQty() {\n    return this.nfts.filter(nft => nft.category_name === \"Art\").length;\n  }\n  getNftMusicQty() {\n    return this.nfts.filter(nft => nft.category_name === \"Music\").length;\n  }\n  getNftSportQty() {\n    return this.nfts.filter(nft => nft.category_name === \"Sport\").length;\n  }\n  getNftGamingQty() {\n    return this.nfts.filter(nft => nft.category_name === \"Gaming\").length;\n  }\n  onSearchTextEntered(searchValue) {\n    this.searchInputValue = searchValue;\n  }\n  // filtering results when the radio button is changed\n  onFilterSelectionChanged(data) {\n    this.selectedRadioButton = data;\n    this.fetchingNFTs();\n  }\n  setETHPrice() {\n    this.ETHServiceInstance.getETHPrice().subscribe(data => {\n      this.ETHServiceInstance.setETHPrice(data[\"EUR\"]);\n      this.ETHPrice = data[\"EUR\"];\n    });\n  }\n};\nGalleryComponent = __decorate([Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.scss']\n})], GalleryComponent);\nexport { GalleryComponent };","map":{"version":3,"mappings":"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","names":["Component","baseURL","GalleryComponent","constructor","http","loggedInUserServiceInstance","ETHServiceInstance","increment","test","ngOnInit","getCategoriesTotal","fetchingNFTs","getLoggedInUserInfo","subscribe","info","isAdmin","setETHPrice","get","data","all_categories","sport_categories","music_categories","gaming_categories","art_categories","error","console","log","selectedRadioButton","nfts","length","fetchMore","limit","getAllTokensQty","getNftArtQty","filter","nft","category_name","getNftMusicQty","getNftSportQty","getNftGamingQty","onSearchTextEntered","searchValue","searchInputValue","onFilterSelectionChanged","getETHPrice","ETHPrice","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hajha\\OneDrive\\Desktop\\Wika\\src\\app\\gallery\\gallery.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NFTs } from '../Interface/Itoken';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoggedInUserService } from '../services/logged-in-user.service';\r\nimport { ETHService } from '../services/eth.service';\r\nimport { baseURL } from 'src/environment/environment';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-gallery',\r\n  templateUrl: './gallery.component.html',\r\n  styleUrls: ['./gallery.component.scss']\r\n})\r\nexport class GalleryComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient, private loggedInUserServiceInstance: LoggedInUserService,\r\n    private ETHServiceInstance: ETHService) { }\r\n\r\n\r\n  //* Calling tokens to display in Gallery view template \r\n\r\n  nfts: Array<NFTs> = [];\r\n  searchInputValue: string = '';\r\n  isAdmin: boolean = false;\r\n  ETHPrice!: number;\r\n  limit: number = 4;\r\n  all_categories!:number;\r\n  sport_categories!:number;\r\n  music_categories!:number;\r\n  gaming_categories!:number;\r\n  art_categories!:number;\r\n\r\n  test  :number = 0;\r\n\r\nincrement(){\r\n  this.test += 1\r\n;}\r\n\r\n  // checked radio button is all by default\r\n  selectedRadioButton: string = \"all\";\r\n\r\n  ngOnInit() {\r\n\r\n    this.getCategoriesTotal();\r\n    this.fetchingNFTs();\r\n    this.loggedInUserServiceInstance.getLoggedInUserInfo().subscribe(info => {\r\n      this.isAdmin = info.isAdmin;\r\n    });\r\n    this.setETHPrice();\r\n\r\n\r\n  }\r\n\r\n  // maxNumberOfNfts(): void {\r\n  //   this.http.get<any>('http://localhost/backend/gallerynfts.php?c=all&o=0').subscribe(\r\n  //     data => {\r\n \r\n  //       this.limitMax = data[0][0][\"total\"];\r\n  //       console.log(this.limitMax + \" limit max\");\r\n\r\n  //     })\r\n  // }\r\n\r\n  getCategoriesTotal(){\r\n    this.http.get<any>(`${baseURL}calculateCategories.php`).subscribe(data => {\r\n\r\n      this.all_categories = data[\"all\"];\r\n      this.sport_categories =data[\"sport\"];\r\n      this.music_categories =data[\"music\"];\r\n      this.gaming_categories = data[\"gaming\"];\r\n      this.art_categories = data[\"art\"];\r\n\r\n\r\n    },\r\n    error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  fetchingNFTs() {\r\n\r\n    this.http.get<any[]>('http://localhost/backend/gallerynfts.php?c=' + this.selectedRadioButton + '&o=4').subscribe(\r\n      data => {\r\n        this.nfts = data;\r\n        console.log(data.length);\r\n\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  fetchMore(): void {\r\n    this.http.get<any[]>('http://localhost/backend/gallerynfts.php?c=' + this.selectedRadioButton + '&o=' + (4 + this.limit)).subscribe(\r\n      data => {\r\n\r\n        this.nfts = data;\r\n        this.limit += 4;\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllTokensQty(): number {\r\n    return this.nfts.length;\r\n\r\n  }\r\n\r\n  getNftArtQty(): number {\r\n    return this.nfts.filter(nft => nft.category_name === \"Art\").length;\r\n  }\r\n  getNftMusicQty(): number {\r\n    return this.nfts.filter(nft => nft.category_name === \"Music\").length;\r\n  }\r\n  getNftSportQty(): number {\r\n    return this.nfts.filter(nft => nft.category_name === \"Sport\").length;\r\n  }\r\n  getNftGamingQty(): number {\r\n    return this.nfts.filter(nft => nft.category_name === \"Gaming\").length;\r\n  }\r\n\r\n\r\n\r\n  onSearchTextEntered(searchValue: string) {\r\n    this.searchInputValue = searchValue;\r\n  }\r\n\r\n\r\n  // filtering results when the radio button is changed\r\n  onFilterSelectionChanged(data: string) {\r\n\r\n    this.selectedRadioButton = data;\r\n    this.fetchingNFTs();\r\n\r\n  }\r\n\r\n  setETHPrice() {\r\n    this.ETHServiceInstance.getETHPrice().subscribe(data => {\r\n      this.ETHServiceInstance.setETHPrice(data[\"EUR\"]);\r\n      this.ETHPrice = data[\"EUR\"];\r\n    })\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}